general:
  debug: True # Debug mode, only for development
  instance_name: "nowsearch" # displayed name

search:
  safe_search: 0 # Filter results. 0: None, 1: Moderate, 2: Strict
  autocomplete: "google" # Existing autocomplete backends: "dbpedia", "duckduckgo", "google", "startpage", "swisscows", "qwant", "wikipedia" - leave blank to turn it off by default
  default_lang: "" # Default search language - leave blank to detect from browser information or use codes from 'languages.py'
  ban_time_on_fail: 5 # ban time in seconds after engine errors
  max_ban_time_on_fail: 120 # max ban time in seconds after engine errors

server:
  port: 8080
  bind_address: "0.0.0.0" # address to listen on
  secret_key: "hfgdshdjgfsdkjhfgdskjghjkf" # change this!
  base_url: "https://vfawkes.io" # Set custom base_url. Possible values: False or "https://your.custom.host/location/"
  image_proxy: False # Proxying image results through searx
  http_protocol_version: "1.0" # 1.0 and 1.1 are supported
  method: "POST" # POST queries are more secure as they don't show up in history but may cause problems when using Firefox containers
  default_http_headers:
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    X-Download-Options: noopen
    X-Robots-Tag: noindex, nofollow
    Referrer-Policy: no-referrer

ui:
  static_path: "" # Custom static path - leave it blank if you didn't change
  templates_path: "" # Custom templates path - leave it blank if you didn't change
  default_theme: oscar # ui theme
  default_locale: "" # Default interface locale - leave blank to detect from browser information or use codes from the 'locales' config section
  theme_args:
    oscar_style: logicodev # default style of oscar
#   results_on_new_tab: False  # Open result links in a new tab by default
#   categories_order :
#     - general
#     - files
#     - map
#     - it
#     - science

# Lock arbitrary settings on the preferences page.
# To find the ID of the user setting you want to lock, check
# the ID of the form on the page "preferences".
#preferences:
#    lock:
#      - language
#      - autocomplete
#      - method

# searx supports result proxification using an external service: https://github.com/asciimoo/morty
# uncomment below section if you have running morty proxy
# the key is base64 encoded (keep the !!binary notation)
# Note: since commit af77ec3, morty accepts a base64 encoded key.
#result_proxy:
#    url : http://127.0.0.1:3000/
#    key : !!binary "your_morty_proxy_key"

outgoing: # communication with search engines
  request_timeout: 1.0 # default timeout in seconds, can be override by engine
  # max_request_timeout: 10.0 # the maximum timeout in seconds
  useragent_suffix: "" # suffix of searx_useragent, could contain informations like an email address to the administrator
  pool_connections: 100 # Number of different hosts
  pool_maxsize: 100 # Number of simultaneous requests by host
# uncomment below section if you want to use a proxy
# see https://2.python-requests.org/en/latest/user/advanced/#proxies
# SOCKS proxies are also supported: see https://2.python-requests.org/en/latest/user/advanced/#socks
#    proxies:
#        http:
#            - http://proxy1:8080
#            - http://proxy2:8080
#        https:
#            - http://proxy1:8080
#            - http://proxy2:8080
# uncomment below section only if you have more than one network interface
# which can be the source of outgoing search requests
#    source_ips:
#        - 1.1.1.1
#        - 1.1.1.2

# External plugin configuration
# See http://searx.github.io/searx/dev/plugins.html for more details
#
# plugins:
#   - plugin1
#   - plugin2
#   - ...

# uncomment below section if you want to configure which plugin is enabled by default
#
# enabled_plugins:
#   - "HTTPS rewrite"
#   - ...

engines:
  - name: arch linux wiki
    engine: archlinux
    shortcut: al
    disabled: True

  #  tmp suspended:  dh key too small
  #  - name : base
  #    engine : base
  #    shortcut : bs

  - name: wikipedia
    engine: wikipedia
    shortcut: wp
    base_url: "https://{language}.wikipedia.org/"

  - name: bing news
    engine: bing_news
    shortcut: bin

  # - name: bing videos
  #   engine: bing_videos
  #   shortcut: biv

  - name: bitbucket
    engine: xpath
    paging: True
    search_url: https://bitbucket.org/repo/all/{pageno}?name={query}
    url_xpath: //article[@class="repo-summary"]//a[@class="repo-link"]/@href
    title_xpath: //article[@class="repo-summary"]//a[@class="repo-link"]
    content_xpath: //article[@class="repo-summary"]/p
    categories: it
    timeout: 4.0
    disabled: True
    shortcut: bb

  # - name: ccc-tv
  #   engine: xpath
  #   paging: False
  #   search_url: https://media.ccc.de/search/?q={query}
  #   url_xpath: //div[@class="caption"]/h3/a/@href
  #   title_xpath: //div[@class="caption"]/h3/a/text()
  #   content_xpath: //div[@class="caption"]/h4/@title
  #   categories: videos
  #   disabled: True
  #   shortcut: c3tv

  - name: crossref
    engine: json_engine
    paging: True
    search_url: https://search.crossref.org/dois?q={query}&page={pageno}
    url_query: doi
    title_query: title
    content_query: fullCitation
    categories: science
    shortcut: cr

  - name: currency
    engine: currency_convert
    categories: general
    shortcut: cc

  - name: deezer
    engine: deezer
    shortcut: dz

  - name: deviantart
    engine: deviantart
    shortcut: da
    timeout: 3.0

  - name: ddg definitions
    engine: duckduckgo_definitions
    shortcut: ddd
    weight: 2
    disabled: True

  # cloudflare protected
  #  - name : digbt
  #    engine : digbt
  #    shortcut : dbt
  #    timeout : 6.0
  #    disabled : True

  #  - name : elasticsearch
  #    shortcut : es
  #    engine : elasticsearch
  #    base_url : http://localhost:9200
  #    username : elastic
  #    password : changeme
  #    index : my-index
  #    # available options: match, simple_query_string, term, terms, custom
  #    query_type : match
  #    # if query_type is set to custom, provide your query here
  #    #custom_query_json: {"query":{"match_all": {}}}
  #    #show_metadata: False
  #    disabled : True

  - name: wikidata
    engine: wikidata
    shortcut: wd
    timeout: 3.0
    weight: 2

  - name: movies
    engine: movies
    categories: movies
    disabled: False
    timeout: 5.0
    shortcut: movies
    weight: 4

  - name: duckduckgo
    engine: duckduckgo
    shortcut: ddg
    disabled: false

  #  - name : ebay
  #    engine : ebay
  #    shortcut : eb
  #    disabled : True
  #    timeout: 5

  - name: genius
    engine: genius
    shortcut: gen

  - name: gitlab
    engine: json_engine
    paging: True
    search_url: https://gitlab.com/api/v4/projects?search={query}&page={pageno}
    url_query: web_url
    title_query: name_with_namespace
    content_query: description
    page_size: 4
    categories: it
    shortcut: gl
    timeout: 10.0
    disabled: True

  - name: arch
    engine: arch_packages
    paging: False
    search_url: https://archlinux.org/packages/search/json/?name={query}
    results_query: results
    url_query: url
    title_query: pkgname
    content_query: pkgdesc
    package_installed_size_query: installed_size
    package_compressed_size_query: compressed_size
    package_version_query: pkgver
    page_size: 4
    categories: it
    shortcut: ap
    timeout: 10.0
    disabled: False

  - name: github
    engine: github
    shortcut: gh

    # This a Gitea service. If you would like to use a different instance,
    # change codeberg.org to URL of the desired Gitea host. Or you can create
    # a new engine by copying this and changing the name, shortcut and search_url.
  - name: codeberg
    engine: json_engine
    search_url: https://codeberg.org/api/v1/repos/search?q={query}&limit=10
    url_query: html_url
    title_query: name
    content_query: description
    categories: it
    shortcut: cb
    disabled: True

  - name: google
    engine: google
    shortcut: go

  - name: google images
    engine: google_images
    shortcut: goi

  - name: google news
    engine: google_news
    shortcut: gon

  # - name: google videos
  #   engine: google_videos
  #   shortcut: gov

  - name: google scholar
    engine: xpath
    paging: True
    search_url: https://scholar.google.com/scholar?start={pageno}&q={query}&hl=en&as_sdt=0,5&as_vis=1
    results_xpath: //div[contains(@class, "gs_r")]/div[@class="gs_ri"]
    url_xpath: .//h3/a/@href
    title_xpath: .//h3/a
    content_xpath: .//div[@class="gs_rs"]
    suggestion_xpath: //div[@id="gs_res_ccl_top"]//a/b
    page_size: 4
    first_page_num: 0
    categories: science
    shortcut: gos

  # - name: google play movies
  #   engine: xpath
  #   search_url: https://play.google.com/store/search?q={query}&c=movies
  #   results_xpath: '//div[@class="WHE7ib mpg5gc"]'
  #   title_xpath: './/div[@class="RZEgze"]//div[@title and not(@title="")]/a'
  #   url_xpath: './/div[@class="RZEgze"]//div[@title and not(@title="")]/a/@href'
  #   content_xpath: './/div[@class="RZEgze"]//a[@class="mnKHRc"]'
  #   thumbnail_xpath: './/div[@class="uzcko"]/div/span[1]//img/@data-src'
  #   categories: videos
  #   shortcut: gpm
  #   disabled: True

  - name: google play music
    engine: xpath
    search_url: https://play.google.com/store/search?q={query}&c=music
    results_xpath: '//div[@class="WHE7ib mpg5gc"]'
    title_xpath: './/div[@class="RZEgze"]//div[@title and not(@title="")]/a'
    url_xpath: './/div[@class="RZEgze"]//div[@title and not(@title="")]/a/@href'
    content_xpath: './/div[@class="RZEgze"]//a[@class="mnKHRc"]'
    thumbnail_xpath: './/div[@class="uzcko"]/div/span[1]//img/@data-src'
    categories: music
    shortcut: gps
    disabled: True

  - name: metager
    engine: xpath
    paging: False
    search_url: https://metager.org/meta/meta.ger3?eingabe={query}
    url_xpath: //div[@class="result-subheadline"]/a/@href
    title_xpath: //div[@class="result-headline"]/h2/@title
    content_xpath: //div[@class="result-description"]/text()
    categories: general
    shortcut: mg
    disabled: True

  - name: mixcloud
    engine: mixcloud
    shortcut: mc

  - name: npm
    engine: npm_engine
    paging: True
    search_url: https://api.npms.io/v2/search?q={query}&size=25&from={pageno}
    results_query: results
    url_query: package/links/npm
    title_query: package/name
    content_query: package/description
    quality_query: score/detail/quality
    popularity_query: score/detail/popularity
    maintenance_query: score/detail/maintenance
    page_size: 4
    categories: it
    disabled: False
    timeout: 5.0
    shortcut: npm

  - name: wheater
    engine: wheater
    search_url: http://api.weatherapi.com/v1/forecast.json?key=b273d4a1f04048abb92142527211101&q={query}&days=8
    categories: general
    disabled: False
    timeout: 5.0
    shortcut: wheater

  - name: veelancing
    engine: veelancing
    search_url: https://veelancing.io/api/v1/jobs/search
    categories: jobs
    disabled: False
    timeout: 2.0
    shortcut: jobs

  - name: openairedatasets
    engine: json_engine
    paging: True
    search_url: https://api.openaire.eu/search/datasets?format=json&page={pageno}&size=10&title={query}
    results_query: response/results/result
    url_query: metadata/oaf:entity/oaf:result/children/instance/webresource/url/$
    title_query: metadata/oaf:entity/oaf:result/title/$
    content_query: metadata/oaf:entity/oaf:result/description/$
    categories: science
    shortcut: oad
    timeout: 5.0

  - name: openairepublications
    engine: json_engine
    paging: True
    search_url: https://api.openaire.eu/search/publications?format=json&page={pageno}&size=10&title={query}
    results_query: response/results/result
    url_query: metadata/oaf:entity/oaf:result/children/instance/webresource/url/$
    title_query: metadata/oaf:entity/oaf:result/title/$
    content_query: metadata/oaf:entity/oaf:result/description/$
    categories: science
    shortcut: oap
    timeout: 5.0

  #  - name : opensemanticsearch
  #    engine : opensemantic
  #    shortcut : oss
  #    base_url : 'http://localhost:8983/solr/opensemanticsearch/'

  - name: openstreetmap
    engine: openstreetmap
    shortcut: osm

  - name: reddit
    engine: reddit
    shortcut: re
    page_size: 4
    timeout: 10.0
    disabled: True

  # tmp suspended: bad certificate
  #  - name : scanr structures
  #    shortcut: scs
  #    engine : scanr_structures
  #    disabled : True

  - name: stackoverflow
    engine: stackoverflow
    shortcut: st

  - name: searchcode code
    engine: searchcode_code
    shortcut: scc
    disabled: True

  #  - name : searx
  #    engine : searx_engine
  #    shortcut : se
  #    instance_urls :
  #        - http://127.0.0.1:8888/
  #        - ...
  #    disabled : True

  # Spotify needs API credentials
  #  - name : spotify
  #    engine : spotify
  #    shortcut : stf
  #    api_client_id : *******
  #    api_client_secret : *******

  # Requires Tor

  # maybe in a fun category
  #  - name : uncyclopedia
  #    engine : mediawiki
  #    shortcut : unc
  #    base_url : https://uncyclopedia.wikia.com/
  #    number_of_results : 5

  # tmp suspended - too slow, too many errors
  #  - name : urbandictionary
  #    engine        : xpath
  #    search_url    : http://www.urbandictionary.com/define.php?term={query}
  #    url_xpath     : //*[@class="word"]/@href
  #    title_xpath   : //*[@class="def-header"]
  #    content_xpath : //*[@class="meaning"]
  #    shortcut : ud

  - name: yahoo news
    engine: yahoo_news
    shortcut: yhn

  - name: youtube
    shortcut: yt
    # You can use the engine using the official stable API, but you need an API key
    # See : https://console.developers.google.com/project
    #    engine : youtube_api
    #    api_key: 'apikey' # required!
    # Or you can use the html non-stable engine, activated by default
    engine: youtube_noapi

  # tmp suspended: Cloudflare CAPTCHA
  #- name : yggtorrent
  #  engine : yggtorrent
  #  shortcut : ygg
  #  url: https://www2.yggtorrent.si/
  #  disabled : True
  #  timeout : 4.0
  - name: wikibooks
    engine: mediawiki
    shortcut: wb
    categories: general
    base_url: "https://{language}.wikibooks.org/"
    number_of_results: 5
    search_type: text
    disabled: True

  - name: wikinews
    engine: mediawiki
    shortcut: wn
    categories: news
    base_url: "https://{language}.wikinews.org/"
    number_of_results: 5
    search_type: text
    disabled: True

  - name: wikiquote
    engine: mediawiki
    shortcut: wq
    categories: general
    base_url: "https://{language}.wikiquote.org/"
    number_of_results: 5
    search_type: text
    disabled: True

  - name: wikisource
    engine: mediawiki
    shortcut: ws
    categories: general
    base_url: "https://{language}.wikisource.org/"
    number_of_results: 5
    search_type: text
    disabled: True

  - name: wiktionary
    engine: mediawiki
    shortcut: wt
    categories: general
    base_url: "https://{language}.wiktionary.org/"
    number_of_results: 5
    search_type: text
    disabled: True

  - name: wolframalpha
    shortcut: wa
    # You can use the engine using the official stable API, but you need an API key
    # See : http://products.wolframalpha.com/api/
    # engine : wolframalpha_api
    # api_key: '' # required!
    engine: wolframalpha_noapi
    timeout: 6.0
    categories: science

  - name: dictzone
    engine: dictzone
    shortcut: dc

  - name: rubygems
    shortcut: rbg
    engine: xpath
    paging: True
    search_url: https://rubygems.org/search?page={pageno}&query={query}
    results_xpath: /html/body/main/div/a[@class="gems__gem"]
    url_xpath: ./@href
    title_xpath: ./span/h2
    content_xpath: ./span/p
    suggestion_xpath: /html/body/main/div/div[@class="search__suggestions"]/p/a
    first_page_num: 1
    categories: it
    disabled: True

  # - name: peertube
  #   engine: peertube
  #   shortcut: ptb
  #   paging: True
  #   base_url: https://peer.tube/
  #   categories: videos
  #   disabled: True

#  - name : yacy
#    engine : yacy
#    shortcut : ya
#    base_url : 'http://localhost:8090'
#    number_of_results : 5
#    timeout : 3.0

# Doku engine lets you access to any Doku wiki instance:
# A public one or a privete/corporate one.
#  - name : ubuntuwiki
#    engine : doku
#    shortcut : uw
#    base_url : 'http://doc.ubuntu-fr.org'

# Be careful when enabling this engine if you are
# running a public instance. Do not expose any sensitive
# information. You can restrict access by configuring a list
# of access tokens under tokens.
#  - name: git grep
#    engine: command
#    command: ['git', 'grep', '{{QUERY}}']
#    shortcut: gg
#    tokens: []
#    disabled: True
#    delimiter:
#        chars: ':'
#        keys: ['filepath', 'code']

# Be careful when enabling this engine if you are
# running a public instance. Do not expose any sensitive
# information. You can restrict access by configuring a list
# of access tokens under tokens.
#  - name: locate
#    engine: command
#    command: ['locate', '{{QUERY}}']
#    shortcut: loc
#    tokens: []
#    disabled: True
#    delimiter:
#        chars: ' '
#        keys: ['line']

# Be careful when enabling this engine if you are
# running a public instance. Do not expose any sensitive
# information. You can restrict access by configuring a list
# of access tokens under tokens.
#  - name: find
#    engine: command
#    command: ['find', '.', '-name', '{{QUERY}}']
#    query_type: path
#    shortcut: fnd
#    tokens: []
#    disabled: True
#    delimiter:
#        chars: ' '
#        keys: ['line']

# Be careful when enabling this engine if you are
# running a public instance. Do not expose any sensitive
# information. You can restrict access by configuring a list
# of access tokens under tokens.
#  - name: pattern search in files
#    engine: command
#    command: ['fgrep', '{{QUERY}}']
#    shortcut: fgr
#    tokens: []
#    disabled: True
#    delimiter:
#        chars: ' '
#        keys: ['line']

# Be careful when enabling this engine if you are
# running a public instance. Do not expose any sensitive
# information. You can restrict access by configuring a list
# of access tokens under tokens.
#  - name: regex search in files
#    engine: command
#    command: ['grep', '{{QUERY}}']
#    shortcut: gr
#    tokens: []
#    disabled: True
#    delimiter:
#        chars: ' '
#        keys: ['line']

locales:
  en: English
  ar: العَرَبِيَّة (Arabic)
  bg: Български (Bulgarian)
  bo: བོད་སྐད་ (Tibetian)
  ca: Català (Catalan)
  cs: Čeština (Czech)
  cy: Cymraeg (Welsh)
  da: Dansk (Danish)
  de: Deutsch (German)
  el_GR: Ελληνικά (Greek_Greece)
  eo: Esperanto (Esperanto)
  es: Español (Spanish)
  et: Eesti (Estonian)
  eu: Euskara (Basque)
  fa_IR: (fārsī) فارسى (Persian)
  fi: Suomi (Finnish)
  fil: Wikang Filipino (Filipino)
  fr: Français (French)
  gl: Galego (Galician)
  he: עברית (Hebrew)
  hr: Hrvatski (Croatian)
  hu: Magyar (Hungarian)
  ia: Interlingua (Interlingua)
  it: Italiano (Italian)
  ja: 日本語 (Japanese)
  lt: Lietuvių (Lithuanian)
  nl: Nederlands (Dutch)
  nl_BE: Vlaams (Dutch_Belgium)
  oc: Lenga D'òc (Occitan)
  pl: Polski (Polish)
  pt: Português (Portuguese)
  pt_BR: Português (Portuguese_Brazil)
  ro: Română (Romanian)
  ru: Русский (Russian)
  sk: Slovenčina (Slovak)
  sl: Slovenski (Slovene)
  sr: српски (Serbian)
  sv: Svenska (Swedish)
  te: తెలుగు (telugu)
  ta: தமிழ் (Tamil)
  tr: Türkçe (Turkish)
  uk: українська мова (Ukrainian)
  vi: tiếng việt (Vietnamese)
  zh: 中文 (Chinese)
  zh_TW: 國語 (Taiwanese Mandarin)

doi_resolvers:
  oadoi.org: "https://oadoi.org/"
  doi.org: "https://doi.org/"
  doai.io: "https://dissem.in/"
  sci-hub.tw: "https://sci-hub.tw/"

default_doi_resolver: "sci-hub.tw"
